package task_management_web.task_management_web.entity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

import java.time.LocalDate;
import java.util.List;
import java.util.Set;

@Entity
@Table(name = "Tasks")
@Getter
@Setter
public class TaskEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false, unique = true)
    private Long id;

    @Column(name = "title", nullable = false, length = 200)
    private String title;

    @Column(name = "description", columnDefinition = "TEXT")
    private String description;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "work_area_id", referencedColumnName = "id", nullable = false)
    private WorkAreasEntity workArea;

    @ManyToMany
    @JoinTable(
            name = "task_assignees",  // Tên bảng trung gian
            joinColumns = @JoinColumn(name = "task_id"),  // Cột join từ bảng Task
            inverseJoinColumns = @JoinColumn(name = "user_id")  // Cột join từ bảng User
    )
    @JsonIgnore
    private List<UserEntity> assignedTo;

    @Column(name = "status", length = 50, nullable = false)
    private String status = "Pending"; // Default status is "Pending"

    @Column(name = "deadline", nullable = false)
    private LocalDate deadline;

    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDate createdAt;

    @OneToMany(mappedBy = "task", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JsonIgnore
    private Set<SubTaskEntity> subTasks;


    // Constructor, Getters and Setters will be automatically generated by Lombok
}
